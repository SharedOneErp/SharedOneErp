spring.application.name=erpre

# 서버 포트 설정
server.port=8787

# 라이브 리로드 설정 (코드 변경 시 자동으로 새로고침)
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true

# PostgreSQL 데이터베이스 연결 설정 (Log4jdbc 적용)
# 서버 IP: 172.30.1.23 (개발 시 localhost 사용)_test
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
#spring.datasource.url=jdbc:log4jdbc:postgresql://172.30.1.23:5432/erpre
spring.datasource.url=jdbc:log4jdbc:postgresql://localhost:5432/erpre
spring.datasource.username=erpre
#spring.datasource.username=postgres
spring.datasource.password=1234

# JPA의 데이터베이스 스키마 자동 업데이트 설정 (create, alter, drop 가능)
spring.jpa.hibernate.ddl-auto=none
# 주요 옵션
#none: Hibernate가 데이터베이스를 관리하지 않음. 기본 값.
#validate: 엔티티와 데이터베이스 스키마를 비교하여 불일치 여부만 확인, 변경은 하지 않음.
#update: 엔티티 변경 사항에 따라 데이터베이스를 수정. 기존 데이터는 유지하면서 스키마를 업데이트함.
#create: 애플리케이션이 시작할 때 기존 테이블을 삭제하고 새로 생성. 모든 데이터가 삭제됨.
#create-drop: 애플리케이션이 시작할 때 테이블을 생성하고, 종료 시 삭제.
#none: 아무것도 하지 않음.
#spring.jpa.hibernate.ddl-auto=update

# SQL 출력 시 보기 좋게 정렬
spring.jpa.properties.hibernate.format_sql=true
# JPA 실행 중 SQL 쿼리 출력
spring.jpa.show-sql=true

# SQL 쿼리에 주석을 추가하여 로그에 표시
spring.jpa.properties.hibernate.use_sql_comments=true
# SQL 쿼리 로그를 DEBUG 레벨로 설정하여 출력
logging.level.org.hibernate.SQL=DEBUG
# SQL 쿼리에 바인딩된 파라미터 값을 로그에 출력
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
