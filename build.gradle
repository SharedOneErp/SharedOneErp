plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.18'  // Spring Boot 플러그인
	id 'io.spring.dependency-management' version '1.1.6'  // Spring 의존성 관리 플러그인
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'  // Querydsl 플러그인 추가
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(11)  // Java 11 버전 사용
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor  // 컴파일 전용 설정에 애노테이션 프로세서 포함
	}
	querydsl.extendsFrom compileClasspath  // Querydsl 설정 추가
}

repositories {
	mavenCentral()  // Maven 중앙 저장소 사용
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'  // Thymeleaf 템플릿 엔진
	implementation 'org.springframework.boot:spring-boot-starter-web'  // 웹 애플리케이션 개발을 위한 Starter
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'  // JPA와 데이터베이스 접근을 위한 Starter
	compileOnly 'org.projectlombok:lombok'  // Lombok 라이브러리(컴파일 시점)
	developmentOnly 'org.springframework.boot:spring-boot-devtools'  // 개발 도구 (Hot reload)
	runtimeOnly 'org.postgresql:postgresql'  // PostgreSQL JDBC 드라이버 (런타임)
	annotationProcessor 'org.projectlombok:lombok'  // Lombok 애노테이션 프로세서
	testImplementation 'org.springframework.boot:spring-boot-starter-test'  // 테스트를 위한 Starter
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'  // JUnit 플랫폼 실행기 (테스트 런타임)
	implementation 'org.postgresql:postgresql:42.5.4'  // PostgreSQL JDBC 드라이버 특정 버전
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16' // Log4jdbc 의존성 추가
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.5' 	// Jackson Databind 라이브러리 추가 (Spring Boot 2.7.18에 호환되는 최신 버전)
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.5' // Java 8 Date and Time API (JSR310)를 위한 Jackson 모듈 추가
	implementation 'org.modelmapper:modelmapper:3.1.0' // ModelMapper : DTO와 엔티티 간의 변환을 자동으로 처리해주는 라이브러리
	implementation 'com.querydsl:querydsl-jpa:5.0.0'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa'
}

tasks.named('test') {
	useJUnitPlatform()  // JUnit 플랫폼 사용
}

// Querydsl 설정 추가
sourceSets {
	main {
		java {
			srcDirs += 'build/generated/sources/annotationProcessor/java/main'
		}
	}
}

compileJava {
	options.annotationProcessorPath = configurations.querydsl // **Annotation Processor 설정 추가**
}
